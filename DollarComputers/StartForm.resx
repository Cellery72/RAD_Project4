<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMZgAFulUqMLVTIjTbbUkHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK1SJBy2WCoxtFotEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtFMjOrNTJN2yUiP/slIj/7JS
        I/yyVieJslIkMr9ZJhS5XS4LuFwpGbFWJT60VSaoslEi/rJSI/+yUiP8s1Qng7JMGQoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVXKEyxUyP9slIj/7JS
        I/+yUiP/slIj/7JSI/+yUiP/slIj/7JSI/+yUiP/slIj/7JSI/+yUiP/slIj/7JSI/+yUiP/slMmtsxm
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6WiklsVMk+rJS
        I/+yUiP/slIj/7JSI/+yUiP/slIj/7JSI/+yUiP/slIj/7JSI/+yUiP/slIj/7JSI/+yUiP/slIj/7JS
        I/+yUiP/s1YnpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ5H
        PdyhRjj/oEY4/6BGOP+gRjj/oEY4/6BGOP+gRjj/oEY4/6BGOP+gRjj/oEY4/6FGOP+hRjj/oUY4/6FG
        OP+gRjf/oUY3/6FGN/+hRjf9kEpZRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABoJomiZyKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gi
        gv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oI4LdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAaS2WEWgigvZoIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gi
        gv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2cigv5rKIxfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABpJoa+aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gi
        gv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2gigv9oIoL/aCKC/2ciguxAAH8EAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMxmZCkoblflJG5X/ShuV/0oblf9KG5X/ShuV/0oblf9KG5X/ShuV/0ob
        lf9JG5X/ShuV/0kblf9KG5X/ShuV/0kblf9JG5X/SRuV/0kblf9JG5X/SRuV/0kblf9JG5X/SRqV/T4w
        wSUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqKslaDg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4P
        vf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4P
        vfwTFsKxNjbJEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZw9wOD73/Dg+9/w4Pvf8OD73/Dg+9/w4P
        vf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4P
        vf8OD776HR/HegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzM8wPDg+9/w4Pvf8OD73/Dg+9/w4P
        vf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4Pvf8OD73/Dg+9/w4P
        vf8OD73/Dg+9/xgaw50AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8u0SEQI8r/ECPK/xAj
        yv8QI8r/ECPK/xAjyv8QI8r/ECPK/xAjyv8QI8r/ECPK/xAjyv8QI8r/ECPK/xAjyv8QI8r/ECPK/xAj
        yv8QI8r/ECPK/xAjyv8VJcveAAD/AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI2jzLBxq
        +P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq
        +P8cavj/HGr4/xxq+P8cavj/HGr4/yNq9IwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAudPY3HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq
        +P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/KGz0WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACRt9TEcavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq
        +P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8cavj/HGr4/xxq+P8pa/RFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKozzKiGL+P8hi/j/IYv4/yGL+P8hi/j/IYv4/yGL+P8hi/j/IYv4/yGL
        +P8hi/j/IYv4/yGL+P8hi/j/IYv4/yGL+P8hi/j/IYv4/yGL+P8hi/j/IYv4/y+V9lIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA10/8dLND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ
        +f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LtD3hAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADnj/wks0Pn9LND5/yzQ+f8s0Pn/LND5/yzQ
        +f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ+f8s0Pn/LND5/yzQ
        +f8u0fjZAP//AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLT+pks0Pn+LND5/yzQ
        +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
        H////w////8H////h////4f////n////9/8=
</value>
  </data>
</root>